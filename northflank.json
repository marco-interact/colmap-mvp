{
  "name": "colmap-mvp-backend",
  "description": "COLMAP 3D Reconstruction Backend (CPU-optimized)",
  "spec": {
    "kind": "Deployment",
    "name": "colmap-backend",
    "billing": {
      "deploymentPlan": "nf-compute-50"
    },
    "deployment": {
      "instances": 1,
      "storage": {
        "ephemeralStorage": {
          "storageSize": 10240
        }
      },
      "docker": {
        "configType": "default"
      }
    },
    "runtimeEnvironment": {
      "resources": {
        "cpus": "2.0",
        "memory": "4096"
      },
      "runtimeFiles": [
        {
          "name": "requirements.txt",
          "path": "/app/requirements.txt",
          "type": "file"
        },
        {
          "name": "main.py",
          "path": "/app/main.py",
          "type": "file"
        },
        {
          "name": "database.py",
          "path": "/app/database.py",
          "type": "file"
        }
      ]
    },
    "ports": [
      {
        "name": "http",
        "internalPort": 8000,
        "protocol": "HTTP",
        "public": true,
        "domains": []
      }
    ],
    "buildSettings": {
      "dockerfile": {
        "buildEngine": "kaniko",
        "dockerfilePath": "/Dockerfile",
        "dockerWorkDir": "/app",
        "useCache": true
      }
    },
    "buildArguments": {},
    "vcsData": {
      "projectUrl": "https://github.com/marco-interact/colmap-mvp",
      "projectType": "github",
      "accountLogin": "marco-interact",
      "projectId": "colmap-mvp"
    },
    "buildConfiguration": {
      "pathIgnoreRules": [
        "node_modules/**",
        "src/**",
        "public/**",
        "docs/**",
        "scripts/**"
      ]
    },
    "environmentVariables": [
      {
        "key": "COLMAP_CPU_ONLY",
        "value": "1"
      },
      {
        "key": "PORT",
        "value": "8000"
      },
      {
        "key": "STORAGE_DIR",
        "value": "/app/data/results"
      },
      {
        "key": "CACHE_DIR",
        "value": "/app/data/cache"
      },
      {
        "key": "PYTHONUNBUFFERED",
        "value": "1"
      }
    ],
    "healthCheck": {
      "livenessProbe": {
        "httpGet": {
          "path": "/health",
          "port": 8000
        },
        "initialDelaySeconds": 40,
        "periodSeconds": 30,
        "timeoutSeconds": 10,
        "successThreshold": 1,
        "failureThreshold": 3
      },
      "readinessProbe": {
        "httpGet": {
          "path": "/readiness",
          "port": 8000
        },
        "initialDelaySeconds": 30,
        "periodSeconds": 10,
        "timeoutSeconds": 5,
        "successThreshold": 1,
        "failureThreshold": 3
      }
    }
  }
}

